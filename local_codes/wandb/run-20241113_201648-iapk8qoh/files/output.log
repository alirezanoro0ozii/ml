Some weights of EsmModel were not initialized from the model checkpoint at facebook/esm1b_t33_650M_UR50S and are newly initialized: ['esm.pooler.dense.bias', 'esm.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
model: 653.014425 M parameters
ESM1b(
  (esm): EsmModel(
    (embeddings): EsmEmbeddings(
      (word_embeddings): Embedding(33, 1280, padding_idx=1)
      (layer_norm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
      (dropout): Dropout(p=0.0, inplace=False)
      (position_embeddings): Embedding(1026, 1280, padding_idx=1)
    )
    (encoder): EsmEncoder(
      (layer): ModuleList(
        (0-32): 33 x EsmLayer(
          (attention): EsmAttention(
            (self): EsmSelfAttention(
              (query): Linear(in_features=1280, out_features=1280, bias=True)
              (key): Linear(in_features=1280, out_features=1280, bias=True)
              (value): Linear(in_features=1280, out_features=1280, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (output): EsmSelfOutput(
              (dense): Linear(in_features=1280, out_features=1280, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (LayerNorm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
          )
          (intermediate): EsmIntermediate(
            (dense): Linear(in_features=1280, out_features=5120, bias=True)
          )
          (output): EsmOutput(
            (dense): Linear(in_features=5120, out_features=1280, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (LayerNorm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
        )
      )
      (emb_layer_norm_after): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
    )
    (pooler): EsmPooler(
      (dense): Linear(in_features=1280, out_features=1280, bias=True)
      (activation): Tanh()
    )
    (contact_head): EsmContactPredictionHead(
      (regression): Linear(in_features=660, out_features=1, bias=True)
      (activation): Sigmoid()
    )
  )
  (layer1): Linear(in_features=1280, out_features=512, bias=True)
  (relu): ReLU()
  (layer2): Linear(in_features=512, out_features=4, bias=True)
)
 35%|███▍      | 3499/10000 [1:33:07<2:43:27,  1.51s/it] 
Epoch [500/10000], Train Loss: 0.0001
[[   0   16    0]
 [   0 1572    0]
 [   0   12    0]]
val Loss: 0.1142, val Accuracy: 0.9825, val F1 Score (micro): 0.9825, , val F1 Score (macro): 0.3304
Epoch [1000/10000], Train Loss: 0.0001
[[   0   14    0]
 [   0 1561    0]
 [   0   25    0]]
val Loss: 0.1758, val Accuracy: 0.9756, val F1 Score (micro): 0.9756, , val F1 Score (macro): 0.3292
Epoch [1500/10000], Train Loss: 0.0005
[[   0   23    0]
 [   0 1554    0]
 [   0   23    0]]
val Loss: 0.1630, val Accuracy: 0.9712, val F1 Score (micro): 0.9712, , val F1 Score (macro): 0.3285
Epoch [2000/10000], Train Loss: 0.0000
[[   0   20    0]
 [   0 1561    0]
 [   0   19    0]]
val Loss: 0.1319, val Accuracy: 0.9756, val F1 Score (micro): 0.9756, , val F1 Score (macro): 0.3292
Epoch [2500/10000], Train Loss: 0.0000
[[   0   28    0]
 [   0 1557    0]
 [   0   15    0]]
val Loss: 0.1469, val Accuracy: 0.9731, val F1 Score (micro): 0.9731, , val F1 Score (macro): 0.3288
Epoch [3000/10000], Train Loss: 0.0002
[[   0   21    0]
 [   0 1566    0]
 [   0   13    0]]
val Loss: 0.1185, val Accuracy: 0.9788, val F1 Score (micro): 0.9788, , val F1 Score (macro): 0.3298
Epoch [3500/10000], Train Loss: 0.0001
[[   0   14    0]
 [   0 1566    0]
 [   0   20    0]]
val Loss: 0.1182, val Accuracy: 0.9788, val F1 Score (micro): 0.9788, , val F1 Score (macro): 0.3298
Epoch [4000/10000], Train Loss: 0.0000
[[   0   22    0]
 [   0 1560    0]
 [   0   18    0]]
val Loss: 0.1361, val Accuracy: 0.9750, val F1 Score (micro): 0.9750, , val F1 Score (macro): 0.3291
Epoch [4500/10000], Train Loss: 0.0000
[[   0   20    0]
 [   0 1568    0]
 [   0   12    0]]
val Loss: 0.1140, val Accuracy: 0.9800, val F1 Score (micro): 0.9800, , val F1 Score (macro): 0.3300
Epoch [5000/10000], Train Loss: 0.0000
[[   0   31    0]
 [   0 1557    0]
 [   0   12    0]]
val Loss: 0.1389, val Accuracy: 0.9731, val F1 Score (micro): 0.9731, , val F1 Score (macro): 0.3288
Epoch [5500/10000], Train Loss: 0.0000
[[   0   21    0]
 [   0 1558    0]
 [   0   21    0]]
val Loss: 0.1365, val Accuracy: 0.9738, val F1 Score (micro): 0.9738, , val F1 Score (macro): 0.3289
Epoch [6000/10000], Train Loss: 0.0000
[[   0   25    0]
 [   0 1559    0]
 [   0   16    0]]
val Loss: 0.1453, val Accuracy: 0.9744, val F1 Score (micro): 0.9744, , val F1 Score (macro): 0.3290
Epoch [6500/10000], Train Loss: 0.0000
[[   0   16    0]
 [   0 1570    0]
 [   0   14    0]]
val Loss: 0.1042, val Accuracy: 0.9812, val F1 Score (micro): 0.9812, , val F1 Score (macro): 0.3302
Epoch [7000/10000], Train Loss: 0.0000
[[   0   16    0]
 [   0 1565    0]
 [   0   19    0]]
val Loss: 0.1225, val Accuracy: 0.9781, val F1 Score (micro): 0.9781, , val F1 Score (macro): 0.3296
Epoch [7500/10000], Train Loss: 0.0000
[[   0   19    0]
 [   0 1564    0]
 [   0   17    0]]
val Loss: 0.1153, val Accuracy: 0.9775, val F1 Score (micro): 0.9775, , val F1 Score (macro): 0.3295
Epoch [8000/10000], Train Loss: 0.0000
[[   0   20    0]
 [   0 1561    0]
 [   0   19    0]]
val Loss: 0.1272, val Accuracy: 0.9756, val F1 Score (micro): 0.9756, , val F1 Score (macro): 0.3292
Epoch [8500/10000], Train Loss: 0.0000
[[   0   30    0]
 [   0 1556    0]
 [   0   14    0]]
val Loss: 0.1325, val Accuracy: 0.9725, val F1 Score (micro): 0.9725, , val F1 Score (macro): 0.3287
Epoch [9000/10000], Train Loss: 0.0000
[[   0   33    0]
 [   0 1555    0]
 [   0   12    0]]
val Loss: 0.1319, val Accuracy: 0.9719, val F1 Score (micro): 0.9719, , val F1 Score (macro): 0.3286
Epoch [9500/10000], Train Loss: 0.0000
[[   0   19    0]
 [   0 1565    0]
 [   0   16    0]]
val Loss: 0.1160, val Accuracy: 0.9781, val F1 Score (micro): 0.9781, , val F1 Score (macro): 0.3296
Epoch [10000/10000], Train Loss: 0.0000
[[   0   22    0]
 [   0 1562    0]
 [   0   16    0]]
val Loss: 0.1203, val Accuracy: 0.9762, val F1 Score (micro): 0.9762, , val F1 Score (macro): 0.3293
