Some weights of EsmModel were not initialized from the model checkpoint at facebook/esm1b_t33_650M_UR50S and are newly initialized: ['esm.pooler.dense.bias', 'esm.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
model: 653.014425 M parameters
ESM1b(
  (esm): EsmModel(
    (embeddings): EsmEmbeddings(
      (word_embeddings): Embedding(33, 1280, padding_idx=1)
      (layer_norm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
      (dropout): Dropout(p=0.0, inplace=False)
      (position_embeddings): Embedding(1026, 1280, padding_idx=1)
    )
    (encoder): EsmEncoder(
      (layer): ModuleList(
        (0-32): 33 x EsmLayer(
          (attention): EsmAttention(
            (self): EsmSelfAttention(
              (query): Linear(in_features=1280, out_features=1280, bias=True)
              (key): Linear(in_features=1280, out_features=1280, bias=True)
              (value): Linear(in_features=1280, out_features=1280, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (output): EsmSelfOutput(
              (dense): Linear(in_features=1280, out_features=1280, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (LayerNorm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
          )
          (intermediate): EsmIntermediate(
            (dense): Linear(in_features=1280, out_features=5120, bias=True)
          )
          (output): EsmOutput(
            (dense): Linear(in_features=5120, out_features=1280, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (LayerNorm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
        )
      )
      (emb_layer_norm_after): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
    )
    (pooler): EsmPooler(
      (dense): Linear(in_features=1280, out_features=1280, bias=True)
      (activation): Tanh()
    )
    (contact_head): EsmContactPredictionHead(
      (regression): Linear(in_features=660, out_features=1, bias=True)
      (activation): Sigmoid()
    )
  )
  (layer1): Linear(in_features=1280, out_features=512, bias=True)
  (relu): ReLU()
  (layer2): Linear(in_features=512, out_features=4, bias=True)
)
  0%|          | 1/100000 [00:04<112:54:26,  4.06s/it]
tensor([[ 0.0566, -0.2524,  0.2247,  0.1001],
        [ 0.0861, -0.2521,  0.2137,  0.0688],
        [ 0.1017, -0.2254,  0.2144,  0.0669],
        [ 0.1049, -0.1931,  0.2037,  0.0595],
        [ 0.0423, -0.2468,  0.2176,  0.1040],
        [ 0.0393, -0.1595,  0.1693,  0.0345],
        [ 0.0298, -0.1735,  0.1445,  0.0854],
        [ 0.0437, -0.1699,  0.1577,  0.0601],
        [ 0.0907, -0.2112,  0.2029,  0.0614],
        [ 0.0332, -0.1832,  0.1583,  0.0665],
        [ 0.0192, -0.1707,  0.1390,  0.0766],
        [ 0.0651, -0.2219,  0.1828,  0.1097],
        [ 0.0805, -0.2574,  0.2065,  0.1155],
        [ 0.0682, -0.1722,  0.1826,  0.0461],
        [ 0.0528, -0.2365,  0.1986,  0.0979],
        [ 0.0862, -0.2002,  0.2173,  0.0688]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2], device='cuda:0')
tensor([[-0.4638,  0.5439,  0.4556, -0.3628],
        [-0.4335,  0.4725,  0.4942, -0.4134],
        [-0.4628,  0.5637,  0.4883, -0.3786],
        [-0.3799,  0.4079,  0.4029, -0.2926],
        [-0.4583,  0.5094,  0.4805, -0.3770],
        [-0.4804,  0.4895,  0.5520, -0.3936],
        [-0.4832,  0.5456,  0.4904, -0.3842],
        [-0.4974,  0.5503,  0.5152, -0.3812],
        [-0.4504,  0.5279,  0.4785, -0.3719],
        [-0.4594,  0.5563,  0.5029, -0.3779],
        [-0.4965,  0.6005,  0.5291, -0.3703],
        [-0.4664,  0.5175,  0.5089, -0.3812],
        [-0.4644,  0.2514,  0.8553, -0.4258],
        [-0.4662,  0.5398,  0.4688, -0.3843],
        [-0.4609,  0.5166,  0.4820, -0.3764],
        [-0.4683,  0.5489,  0.5017, -0.3752]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2], device='cuda:0')
tensor([[-1.5747,  1.2880,  2.2070, -1.1488],
        [-1.5541,  1.5992,  1.7785, -1.1184],
        [-1.6007,  1.5183,  1.8608, -1.1224],
        [-1.5156,  1.3290,  1.9611, -1.1252],
        [-1.5865,  1.5755,  1.8440, -1.1531],
        [-1.5688,  1.2480,  2.1385, -1.1381],
        [-1.5402,  1.6373,  1.7180, -1.1045],
        [-1.6142,  1.6130,  1.7803, -1.1537],
        [-1.6091,  1.5662,  1.8790, -1.1941],
        [-1.5289,  1.4134,  1.8335, -1.1110],
        [-1.5962,  1.5126,  1.8962, -1.1665],
        [-1.6439,  1.7035,  1.8056, -1.1748],
        [-1.3845,  1.3671,  1.5869, -1.0459],
        [-1.6010,  1.6190,  1.8674, -1.1513],
        [-1.6640,  1.5210,  1.9409, -1.1240],
        [-1.6024,  1.6562,  1.6792, -1.1491]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1], device='cuda:0')
tensor([[-1.7476,  2.4681,  1.0513, -1.3025],
        [-1.8505,  2.4042,  1.3282, -1.3982],
        [-1.7738,  2.4651,  1.1374, -1.3210],
        [-1.7813,  2.5091,  1.1009, -1.3435],
        [-1.7410,  2.4567,  1.0674, -1.3142],
        [-1.8038,  2.5036,  1.1059, -1.3490],
        [-1.7834,  2.5807,  1.0481, -1.3316],
        [-1.7054,  2.2893,  1.1241, -1.2924],
        [-1.6933,  2.3395,  1.1293, -1.2899],
        [-1.7326,  2.4767,  1.0224, -1.3211],
        [-1.5698,  1.6760,  1.5940, -1.2643],
        [-1.8010,  2.3842,  1.2322, -1.3338],
        [-1.7391,  2.1295,  1.3832, -1.3240],
        [-1.7352,  2.4749,  1.0466, -1.3356],
        [-1.7422,  2.5144,  1.0368, -1.3308],
        [-1.7940,  2.2763,  1.3504, -1.3807]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1], device='cuda:0')
tensor([[-1.6209,  0.3938,  3.1128, -1.2686],
        [-1.5562,  0.4452,  2.9488, -1.2421],
        [-1.5480,  0.6052,  2.7132, -1.2056],
        [-1.5245,  0.5173,  2.8185, -1.1862],
        [-1.5232,  0.3869,  2.9313, -1.1525],
        [-1.5268,  0.4306,  2.8748, -1.1744],
        [-1.5576,  0.4194,  2.9309, -1.1497],
        [-1.5238,  0.6225,  2.6454, -1.1773],
        [-1.5483,  0.5176,  2.8248, -1.1939],
        [-1.5317,  0.4995,  2.8503, -1.1987],
        [-1.5278,  0.5512,  2.7925, -1.2154],
        [-1.5009,  0.4481,  2.8810, -1.1732],
        [-1.5177,  0.4841,  2.8161, -1.1723],
        [-1.5659,  0.4013,  3.0194, -1.2253],
        [-1.6035,  0.4640,  3.0816, -1.2982],
        [-1.5325,  0.5615,  2.7489, -1.2062]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2], device='cuda:0')
tensor([[-1.2783,  1.4535,  1.1367, -1.1135],
        [-1.3322,  1.5066,  1.1736, -1.1468],
        [-1.3478,  1.4671,  1.2771, -1.1714],
        [-1.3672,  1.5804,  1.1242, -1.1602],
        [-1.3413,  1.5264,  1.1428, -1.1365],
        [-1.3637,  1.4370,  1.3160, -1.1695],
        [-1.3615,  1.3061,  1.4318, -1.1501],
        [-1.3959,  1.3485,  1.4868, -1.2261],
        [-1.3569,  1.5108,  1.2150, -1.1643],
        [-1.3166,  1.4703,  1.1557, -1.1164],
        [-1.3851,  1.6165,  1.1103, -1.1759],
        [-1.3264,  1.5085,  1.1669, -1.1451],
        [-1.3764,  1.5838,  1.1570, -1.1643],
        [-1.3641,  1.5710,  1.1758, -1.1899],
        [-1.3647,  1.5763,  1.1434, -1.1703],
        [-1.3008,  1.4495,  1.1384, -1.1042]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2], device='cuda:0')
tensor([[-1.5111,  1.7911,  1.2342, -1.3321],
        [-1.5252,  1.7891,  1.2558, -1.3538],
        [-1.4557,  1.7037,  1.2251, -1.2953],
        [-1.5103,  1.7876,  1.2397, -1.3328],
        [-1.4726,  1.5016,  1.3737, -1.2819],
        [-1.4976,  1.7675,  1.2341, -1.3260],
        [-1.4935,  1.3745,  1.5873, -1.3234],
        [-1.4809,  1.4194,  1.5973, -1.3463],
        [-1.4811,  1.7499,  1.2392, -1.3186],
        [-1.4728,  1.6531,  1.3178, -1.3144],
        [-1.4936,  1.6762,  1.2737, -1.3107],
        [-1.4616,  1.7029,  1.2175, -1.3031],
        [-1.4400,  1.7075,  1.1967, -1.2945],
        [-1.7067,  1.1841,  2.3567, -1.5272],
        [-1.4414,  1.6916,  1.1683, -1.2708],
        [-1.4663,  1.7319,  1.2213, -1.3073]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1], device='cuda:0')
tensor([[-1.6940,  1.8648,  1.5196, -1.5434],
        [-1.6717,  1.8575,  1.4879, -1.5261],
        [-1.6284,  1.8367,  1.4313, -1.4801],
        [-1.6554,  1.8306,  1.4705, -1.4976],
        [-1.5265,  1.6322,  1.4626, -1.3893],
        [-1.7049,  1.9268,  1.4515, -1.5275],
        [-1.5796,  1.7071,  1.4577, -1.4341],
        [-1.6627,  1.8396,  1.4935, -1.5114],
        [-1.7400,  1.9439,  1.5460, -1.5814],
        [-1.6904,  1.4069,  2.0475, -1.5180],
        [-1.6815,  1.8979,  1.4510, -1.5182],
        [-1.6464,  1.4105,  1.9924, -1.5097],
        [-1.5974,  1.7224,  1.5093, -1.4740],
        [-1.6193,  1.4144,  1.9155, -1.4946],
        [-1.7508,  1.9763,  1.5339, -1.5977],
        [-1.6685,  1.3434,  2.0996, -1.5278]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2], device='cuda:0')
tensor([[-1.8943,  1.5554,  2.2758, -1.7081],
        [-1.4271,  1.3340,  1.5550, -1.2457],
        [-1.9937,  1.5496,  2.5597, -1.8579],
        [-1.8385,  1.8740,  1.6686, -1.5921],
        [-1.8699,  1.8630,  1.8435, -1.5792],
        [-1.7187,  1.6337,  1.8145, -1.5073],
        [-1.8344,  1.9735,  1.7017, -1.6844],
        [-1.8034,  1.7938,  1.7189, -1.5768],
        [-1.7552,  1.5314,  2.0716, -1.6458],
        [-1.6531,  1.5176,  1.7946, -1.4514],
        [-1.9426,  2.0389,  1.8255, -1.7463],
        [-1.9075,  2.0451,  1.7610, -1.7225],
        [-1.7688,  1.7628,  1.7729, -1.5950],
        [-1.6600,  1.3528,  2.0560, -1.5094],
        [-1.7907,  1.7252,  1.9214, -1.6760],
        [-1.8686,  1.9212,  1.7456, -1.6760]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1], device='cuda:0')
tensor([[-2.0121,  2.1250,  1.8828, -1.8301],
        [-2.1653,  2.2863,  2.0147, -1.9655],
        [-1.8983,  2.0576,  1.7347, -1.7455],
        [-1.7655,  1.5572,  2.0580, -1.6450],
        [-1.8711,  1.9845,  1.6967, -1.6706],
        [-1.8884,  1.8173,  1.9609, -1.7327],
        [-1.9240,  1.7313,  2.0980, -1.7580],
        [-1.9112,  1.6173,  2.2972, -1.7852],
        [-1.8789,  1.5832,  2.2769, -1.7398],
        [-1.8624,  1.5956,  2.3019, -1.7764],
        [-2.0985,  2.2562,  1.9133, -1.9157],
        [-1.9476,  1.6819,  2.2803, -1.8071],
        [-1.9280,  2.0946,  1.7471, -1.7659],
        [-1.8299,  1.9567,  1.7433, -1.6909],
        [-2.3047,  2.4808,  2.1065, -2.1040],
        [-1.9610,  1.4832,  2.4945, -1.7989]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2], device='cuda:0')
tensor([[-1.7668,  1.3921,  2.3010, -1.6528],
        [-1.8671,  1.4413,  2.4305, -1.7307],
        [-1.8326,  1.3188,  2.4820, -1.7094],
        [-2.0328,  2.2131,  1.8208, -1.8557],
        [-1.9118,  2.1235,  1.6969, -1.7449],
        [-2.0237,  1.3808,  2.8943, -1.8764],
        [-1.8891,  1.5636,  2.3308, -1.7721],
        [-2.2146,  2.3642,  2.0149, -2.0139],
        [-2.0113,  2.2414,  1.7713, -1.8438],
        [-1.7160,  1.3537,  2.1466, -1.6002],
        [-1.9605,  2.1625,  1.7366, -1.7953],
        [-1.9989,  2.0252,  1.9412, -1.8207],
        [-2.0002,  2.2284,  1.7260, -1.7852],
        [-1.9548,  2.1530,  1.7380, -1.7856],
        [-1.7826,  1.8495,  1.7321, -1.6539],
        [-1.9964,  1.3542,  2.7923, -1.8772]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2], device='cuda:0')
tensor([[-1.8499,  2.0241,  1.6460, -1.6794],
        [-1.8938,  1.5707,  2.2591, -1.7205],
        [-1.8777,  1.8702,  1.9073, -1.7485],
        [-1.7932,  1.2003,  2.4395, -1.5814],
        [-1.8731,  1.4801,  2.4181, -1.7555],
        [-2.0227,  2.2571,  1.7582, -1.8405],
        [-2.0205,  2.2283,  1.7615, -1.8386],
        [-1.9517,  2.1068,  1.7983, -1.7893],
        [-1.8670,  1.4490,  2.3696, -1.7434],
        [-2.5584,  2.7154,  2.3579, -2.3039],
        [-2.2067,  2.3098,  2.1037, -1.9887],
        [-2.0037,  1.6254,  2.5372, -1.8934],
        [-1.8578,  2.0206,  1.6733, -1.6923],
        [-1.8769,  2.0492,  1.6672, -1.6989],
        [-1.9039,  1.9642,  1.8375, -1.7398],
        [-2.1747,  2.1990,  2.1545, -2.0129]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2], device='cuda:0')
tensor([[-3.1196,  3.9018,  2.1521, -2.8611],
        [-2.7487,  3.5187,  1.8561, -2.5402],
        [-1.8122,  0.2589,  3.3023, -1.5298],
        [-2.9800,  3.7460,  2.0223, -2.7360],
        [-2.2136,  1.4053,  3.1391, -2.0808],
        [-3.5470,  4.1131,  2.8125, -3.2181],
        [-2.0703,  0.6845,  3.4109, -1.7824],
        [-1.7579,  0.1090,  3.2421, -1.4389],
        [-2.9184,  3.6683,  2.0392, -2.6853],
        [-2.1387,  0.9441,  3.5273, -1.9419],
        [-2.0837,  0.6103,  3.5712, -1.7729],
        [-2.5602,  3.2203,  1.7643, -2.3547],
        [-3.0795,  3.9042,  2.0579, -2.8296],
        [-1.8475,  0.2927,  3.2328, -1.5317],
        [-2.9199,  3.6756,  1.9819, -2.6772],
        [-1.6768,  0.0589,  3.1888, -1.3685]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2], device='cuda:0')
tensor([[-0.9823, -1.1711,  2.6265, -0.5394],
        [-4.5548,  6.4177,  2.0066, -4.0230],
        [-1.2823, -1.0289,  3.0404, -0.7793],
        [-4.4671,  6.3378,  1.8842, -3.9393],
        [-1.7997, -0.7442,  3.8163, -1.3392],
        [-4.3080,  5.7716,  2.2546, -3.8391],
        [-0.4217, -0.7843,  1.2078, -0.0782],
        [-0.9013, -1.1926,  2.4701, -0.4002],
        [-4.3755,  6.1915,  1.8868, -3.8641],
        [-4.4011,  5.9544,  2.3002, -3.8864],
        [-1.1141, -1.0508,  2.8061, -0.6583],
        [-4.3145,  6.0653,  1.8555, -3.8243],
        [-4.4639,  6.2199,  2.0588, -3.9548],
        [-1.1749, -1.0171,  3.0549, -0.7979],
        [-4.6786,  6.5053,  2.1055, -4.1187],
        [-4.4333,  6.2543,  1.9508, -3.9120]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1], device='cuda:0')
tensor([[-3.1640,  0.4600,  5.7241, -2.8549],
        [-3.0030,  0.3545,  5.5811, -2.7098],
        [-3.6745,  4.9505,  1.7849, -3.3132],
        [-3.7859,  5.1933,  1.7346, -3.4186],
        [-3.1724,  0.8679,  5.2845, -2.8886],
        [-2.8253, -0.6084,  5.9935, -2.3843],
        [-3.8559,  5.2289,  1.7955, -3.4468],
        [-3.7408,  4.3167,  2.6903, -3.4215],
        [-2.8798, -0.7055,  5.9780, -2.3762],
        [-2.8775, -0.2196,  5.8834, -2.5963],
        [-2.7383, -0.9200,  6.0351, -2.1924],
        [-2.5283, -1.2142,  5.9303, -1.9396],
        [-2.9296, -0.5559,  6.0551, -2.4441],
        [-3.9436,  5.2535,  1.9788, -3.5644],
        [-2.6995, -1.0244,  6.0168, -2.1352],
        [-3.9017,  4.9746,  2.2339, -3.5384]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2], device='cuda:0')
tensor([[-2.7721,  3.6741,  1.2840, -2.5562],
        [-2.8503,  3.7585,  1.3448, -2.6308],
        [-2.7978,  3.7404,  1.2700, -2.5711],
        [-2.8011,  3.7159,  1.3184, -2.5864],
        [-2.7953,  3.7086,  1.2882, -2.5683],
        [-2.8130,  3.7318,  1.3117, -2.5937],
        [-2.8121,  3.6960,  1.3527, -2.6002],
        [-2.8035,  3.7137,  1.3105, -2.5793],
        [-2.7799,  3.6649,  1.3354, -2.5712],
        [-2.7754,  3.6565,  1.3286, -2.5662],
        [-2.9457,  3.7874,  1.5672, -2.7390],
        [-2.8926,  3.7899,  1.3986, -2.6631],
        [-2.8350,  3.6988,  1.4047, -2.6200],
        [-2.9145,  3.7833,  1.5077, -2.7069],
        [-2.8327,  3.7061,  1.3970, -2.6243],
        [-2.8406,  3.7243,  1.3959, -2.6253]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1], device='cuda:0')
tensor([[-2.4198,  2.8622,  1.5435, -2.2914],
        [-2.4240,  2.8580,  1.5717, -2.3122],
        [-2.4126,  2.8548,  1.5520, -2.2940],
        [-2.4443,  2.8924,  1.5636, -2.3244],
        [-2.4111,  2.8528,  1.5535, -2.2948],
        [-2.3909,  2.8049,  1.5843, -2.2936],
        [-2.3881,  2.7998,  1.5928, -2.2887],
        [-2.5104,  2.9651,  1.5837, -2.3673],
        [-2.4847,  2.9034,  1.6912, -2.3851],
        [-2.3926,  2.8455,  1.5121, -2.2725],
        [-2.4411,  2.9001,  1.5570, -2.3200],
        [-3.0956,  3.5067,  2.1145, -2.8885],
        [-2.4040,  2.8451,  1.5502, -2.2858],
        [-2.4632,  2.9097,  1.5894, -2.3396],
        [-2.3995,  2.8188,  1.5793, -2.2934],
        [-2.4363,  2.8868,  1.5342, -2.3074]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 1], device='cuda:0')
tensor([[-2.1285,  2.1469,  1.8571, -2.1020],
        [-2.1870,  2.2057,  1.8933, -2.1505],
        [-2.1341,  2.1668,  1.8464, -2.1072],
        [-2.1233,  2.1521,  1.8372, -2.0942],
        [-2.1537,  2.1797,  1.8715, -2.1220],
        [-2.1469,  2.1668,  1.8744, -2.1189],
        [-2.1659,  2.1950,  1.8669, -2.1349],
        [-2.1356,  2.1763,  1.8301, -2.1031],
        [-2.1900,  2.2387,  1.8604, -2.1506],
        [-2.1526,  2.1816,  1.8716, -2.1263],
        [-2.1253,  2.1669,  1.8189, -2.0908],
        [-2.1242,  2.1406,  1.8657, -2.1015],
        [-2.1324,  2.1539,  1.8624, -2.1088],
        [-2.1333,  2.1577,  1.8548, -2.1015],
        [-2.1059,  2.1211,  1.8481, -2.0847],
        [-2.1545,  2.2034,  1.8375, -2.1204]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1], device='cuda:0')
tensor([[-2.0216,  1.7321,  2.1607, -2.0645],
        [-2.0106,  1.7147,  2.1632, -2.0572],
        [-2.0218,  1.7340,  2.1560, -2.0631],
        [-2.0191,  1.7194,  2.1747, -2.0647],
        [-2.0102,  1.7281,  2.1372, -2.0484],
        [-1.9955,  1.6977,  2.1524, -2.0398],
        [-2.0043,  1.7118,  2.1479, -2.0487],
        [-2.0179,  1.7340,  2.1479, -2.0591],
        [-2.0074,  1.7168,  2.1507, -2.0502],
        [-2.0456,  1.7606,  2.1712, -2.0826],
        [-2.0419,  1.7512,  2.1789, -2.0834],
        [-2.0850,  1.7703,  2.2415, -2.1277],
        [-2.0185,  1.7283,  2.1568, -2.0609],
        [-1.9993,  1.7120,  2.1298, -2.0367],
        [-1.9937,  1.7079,  2.1297, -2.0363],
        [-1.9965,  1.7214,  2.1129, -2.0314]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1], device='cuda:0')
tensor([[-2.0735,  1.6355,  2.3355, -2.1255],
        [-2.2200,  1.7573,  2.4732, -2.2714],
        [-2.0993,  1.6765,  2.3249, -2.1424],
        [-2.3609,  1.8648,  2.6323, -2.4114],
        [-2.1825,  1.7132,  2.4724, -2.2404],
        [-2.0766,  1.6374,  2.3308, -2.1273],
        [-2.0791,  1.6449,  2.3247, -2.1231],
        [-2.3493,  1.8825,  2.5701, -2.3851],
        [-2.1277,  1.6853,  2.3708, -2.1744],
        [-2.1111,  1.6671,  2.3767, -2.1676],
        [-2.1315,  1.6810,  2.3935, -2.1832],
        [-2.1456,  1.6822,  2.4366, -2.2016],
        [-2.0773,  1.6364,  2.3427, -2.1321],
        [-2.1035,  1.6559,  2.3766, -2.1606],
        [-2.1106,  1.6808,  2.3402, -2.1527],
        [-2.0545,  1.6221,  2.3001, -2.1019]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1], device='cuda:0')
tensor([[-2.1169,  1.6563,  2.3189, -2.1534],
        [-2.1640,  1.6875,  2.3850, -2.2048],
        [-2.1230,  1.6565,  2.3320, -2.1620],
        [-2.1189,  1.6511,  2.3307, -2.1586],
        [-2.1619,  1.6905,  2.3757, -2.2040],
        [-2.1341,  1.6646,  2.3507, -2.1757],
        [-2.1283,  1.6677,  2.3286, -2.1644],
        [-2.1407,  1.6695,  2.3567, -2.1811],
        [-2.1458,  1.6801,  2.3484, -2.1818],
        [-2.1232,  1.6519,  2.3401, -2.1631],
        [-2.1472,  1.6730,  2.3661, -2.1884],
        [-2.1395,  1.6685,  2.3582, -2.1818],
        [-2.1324,  1.6671,  2.3421, -2.1713],
        [-2.1427,  1.6776,  2.3490, -2.1804],
        [-2.1283,  1.6565,  2.3469, -2.1683],
        [-2.1388,  1.6661,  2.3620, -2.1830]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1], device='cuda:0')
tensor([[-2.2206,  1.7633,  2.3353, -2.2451],
        [-2.2109,  1.7585,  2.3127, -2.2280],
        [-2.2225,  1.7684,  2.3239, -2.2413],
        [-2.2074,  1.7497,  2.3253, -2.2324],
        [-2.2187,  1.7571,  2.3409, -2.2460],
        [-2.2182,  1.7558,  2.3356, -2.2415],
        [-2.2063,  1.7475,  2.3246, -2.2297],
        [-2.2231,  1.7636,  2.3376, -2.2458],
        [-2.2151,  1.7557,  2.3311, -2.2397],
        [-2.2191,  1.7696,  2.3168, -2.2377],
        [-2.2174,  1.7619,  2.3201, -2.2352],
        [-2.2067,  1.7390,  2.3438, -2.2383],
        [-2.2201,  1.7661,  2.3250, -2.2390],
        [-2.2117,  1.7433,  2.3522, -2.2454],
        [-2.2103,  1.7564,  2.3177, -2.2320],
        [-2.2183,  1.7615,  2.3307, -2.2407]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2], device='cuda:0')
tensor([[-2.3093,  1.8793,  2.3151, -2.3208],
        [-2.3089,  1.8770,  2.3109, -2.3181],
        [-2.3039,  1.8688,  2.3210, -2.3182],
        [-2.3055,  1.8683,  2.3235, -2.3207],
        [-2.3056,  1.8700,  2.3154, -2.3173],
        [-2.3004,  1.8612,  2.3233, -2.3158],
        [-2.2904,  1.8564,  2.3033, -2.3031],
        [-2.3025,  1.8640,  2.3274, -2.3193],
        [-2.3053,  1.8683,  2.3296, -2.3231],
        [-2.2903,  1.8590,  2.3024, -2.3020],
        [-2.3037,  1.8613,  2.3318, -2.3219],
        [-2.3141,  1.8770,  2.3272, -2.3266],
        [-2.2975,  1.8657,  2.3088, -2.3097],
        [-2.3025,  1.8666,  2.3192, -2.3166],
        [-2.2987,  1.8673,  2.3125, -2.3130],
        [-2.2887,  1.8529,  2.3088, -2.3038]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1], device='cuda:0')
tensor([[-2.3900,  1.9756,  2.3158, -2.3964],
        [-2.3750,  1.9630,  2.3074, -2.3851],
        [-2.3902,  1.9772,  2.3130, -2.3959],
        [-2.3836,  1.9661,  2.3250, -2.3963],
        [-2.3894,  1.9742,  2.3217, -2.3982],
        [-2.3865,  1.9702,  2.3227, -2.3970],
        [-2.3778,  1.9645,  2.3105, -2.3872],
        [-2.3880,  1.9761,  2.3121, -2.3938],
        [-2.3825,  1.9682,  2.3181, -2.3929],
        [-2.3737,  1.9589,  2.3029, -2.3820],
        [-2.3790,  1.9622,  2.3150, -2.3889],
        [-2.3872,  1.9766,  2.3105, -2.3940],
        [-2.3645,  1.9517,  2.2981, -2.3729],
        [-2.3824,  1.9668,  2.3187, -2.3916],
        [-2.3774,  1.9629,  2.3160, -2.3893],
        [-2.3816,  1.9704,  2.3078, -2.3886]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1], device='cuda:0')
tensor([[-2.4525,  2.0566,  2.3176, -2.4578],
        [-2.4480,  2.0502,  2.3170, -2.4534],
        [-2.4361,  2.0381,  2.3100, -2.4429],
        [-2.4590,  2.0645,  2.3166, -2.4624],
        [-2.4572,  2.0612,  2.3141, -2.4590],
        [-2.4588,  2.0635,  2.3217, -2.4635],
        [-2.4510,  2.0553,  2.3169, -2.4578],
        [-2.4432,  2.0465,  2.3119, -2.4492],
        [-2.4561,  2.0610,  2.3132, -2.4582],
        [-2.4555,  2.0604,  2.3155, -2.4595],
        [-2.4548,  2.0558,  2.3229, -2.4608],
        [-2.4578,  2.0643,  2.3155, -2.4598],
        [-2.4567,  2.0625,  2.3130, -2.4587],
        [-2.4500,  2.0549,  2.3128, -2.4532],
        [-2.4515,  2.0549,  2.3157, -2.4554],
        [-2.4460,  2.0504,  2.3102, -2.4508]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1], device='cuda:0')
tensor([[-2.5119,  2.1293,  2.3192, -2.5101],
        [-2.5149,  2.1292,  2.3255, -2.5143],
        [-2.5086,  2.1261,  2.3201, -2.5090],
        [-2.4950,  2.1123,  2.3090, -2.4952],
        [-2.5045,  2.1208,  2.3151, -2.5038],
        [-2.5067,  2.1229,  2.3128, -2.5039],
        [-2.5217,  2.1373,  2.3308, -2.5213],
        [-2.5129,  2.1286,  2.3259, -2.5131],
        [-2.5108,  2.1273,  2.3222, -2.5115],
        [-2.5026,  2.1205,  2.3164, -2.5025],
        [-2.5216,  2.1356,  2.3321, -2.5225],
        [-2.5081,  2.1272,  2.3178, -2.5073],
        [-2.4977,  2.1142,  2.3118, -2.4983],
        [-2.5166,  2.1358,  2.3201, -2.5134],
        [-2.4900,  2.1063,  2.3088, -2.4918],
        [-2.5172,  2.1333,  2.3269, -2.5165]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2], device='cuda:0')
tensor([[-2.5427,  2.1724,  2.3133, -2.5387],
        [-2.5527,  2.1797,  2.3223, -2.5484],
        [-2.5519,  2.1797,  2.3278, -2.5499],
        [-2.5628,  2.1877,  2.3268, -2.5571],
        [-2.5521,  2.1769,  2.3259, -2.5487],
        [-2.5528,  2.1814,  2.3222, -2.5481],
        [-2.5626,  2.1886,  2.3334, -2.5595],
        [-2.5592,  2.1842,  2.3301, -2.5551],
        [-2.5572,  2.1823,  2.3313, -2.5553],
        [-2.5500,  2.1758,  2.3231, -2.5461],
        [-2.5685,  2.1958,  2.3293, -2.5612],
        [-2.5547,  2.1797,  2.3289, -2.5515],
        [-2.5521,  2.1772,  2.3268, -2.5492],
        [-2.5529,  2.1760,  2.3315, -2.5514],
        [-2.5499,  2.1755,  2.3247, -2.5467],
        [-2.5638,  2.1900,  2.3276, -2.5572]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1], device='cuda:0')
tensor([[-2.5768,  2.2100,  2.3268, -2.5725],
        [-2.5840,  2.2188,  2.3266, -2.5766],
        [-2.5835,  2.2150,  2.3317, -2.5781],
        [-2.5765,  2.2107,  2.3210, -2.5705],
        [-2.5838,  2.2151,  2.3286, -2.5777],
        [-2.5815,  2.2129,  2.3371, -2.5781],
        [-2.5858,  2.2170,  2.3279, -2.5793],
        [-2.5818,  2.2153,  2.3276, -2.5760],
        [-2.5834,  2.2148,  2.3338, -2.5800],
        [-2.5830,  2.2173,  2.3270, -2.5769],
        [-2.5818,  2.2134,  2.3312, -2.5767],
        [-2.5949,  2.2297,  2.3343, -2.5879],
        [-2.5742,  2.2076,  2.3244, -2.5702],
        [-2.5933,  2.2272,  2.3329, -2.5863],
        [-2.5854,  2.2176,  2.3340, -2.5815],
        [-2.5757,  2.2082,  2.3265, -2.5715]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2], device='cuda:0')
tensor([[-2.6125,  2.2495,  2.3421, -2.6049],
        [-2.6089,  2.2451,  2.3328, -2.5998],
        [-2.6037,  2.2406,  2.3352, -2.5965],
        [-2.6057,  2.2428,  2.3341, -2.5985],
        [-2.6033,  2.2421,  2.3278, -2.5946],
        [-2.5891,  2.2280,  2.3184, -2.5800],
        [-2.5935,  2.2302,  2.3229, -2.5857],
        [-2.6007,  2.2386,  2.3268, -2.5923],
        [-2.6048,  2.2417,  2.3331, -2.5961],
        [-2.6086,  2.2470,  2.3345, -2.6008],
        [-2.5998,  2.2370,  2.3285, -2.5907],
        [-2.5974,  2.2362,  2.3255, -2.5887],
        [-2.6029,  2.2423,  2.3281, -2.5952],
        [-2.6038,  2.2406,  2.3347, -2.5982],
        [-2.6053,  2.2425,  2.3321, -2.5964],
        [-2.6092,  2.2464,  2.3334, -2.5995]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1], device='cuda:0')
  3%|▎         | 2999/100000 [1:17:45<40:36:17,  1.51s/it]
Epoch [1000/100000]
Train Loss: 0.6482, Train Accuracy: 0.6358
Train F1 (micro): 0.6358, Train F1 (macro): 0.4241
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 5218 2782    0]
 [   0 3020 4954    0]
 [   0    8   18    0]]
Val Loss: 0.5250, Val Accuracy: 0.7475
Val F1 (micro): 0.7475, Val F1 (macro): 0.3141
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   19    6    0]
 [   0  386 1177    0]
 [   0    4    8    0]]
Epoch [2000/100000]
Train Loss: 0.5404, Train Accuracy: 0.7392
Train F1 (micro): 0.7392, Train F1 (macro): 0.4930
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 6025 1975    0]
 [   0 2181 5802    0]
 [   0   10    7    0]]
Val Loss: 0.9491, Val Accuracy: 0.5569
Val F1 (micro): 0.5569, Val F1 (macro): 0.2570
Val Confusion Matrix:
[[  0   0   0   0]
 [  0  22   3   0]
 [  0 694 869   0]
 [  0   7   5   0]]
Epoch [3000/100000]
Train Loss: 0.5092, Train Accuracy: 0.7689
Train F1 (micro): 0.7689, Train F1 (macro): 0.5657
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 6135 1828   37]
 [   0 1590 6143   79]
 [   0   29  135   24]]
Val Loss: 0.5578, Val Accuracy: 0.7581
Val F1 (micro): 0.7581, Val F1 (macro): 0.3218
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   22    3    0]
 [   0  372 1191    0]
 [   0    4    8    0]]
Epoch [4000/100000]
Train Loss: 0.4300, Train Accuracy: 0.8061
Train F1 (micro): 0.8061, Train F1 (macro): 0.5940
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 6239 1758    3]
 [   0 1275 6651   18]
 [   0   33   16    7]]
Val Loss: 0.8752, Val Accuracy: 0.6562
Val F1 (micro): 0.6562, Val F1 (macro): 0.2885
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   22    3    0]
 [   0  535 1028    0]
 [   0    6    6    0]]
Epoch [5000/100000]
Train Loss: 0.4214, Train Accuracy: 0.8185
Train F1 (micro): 0.8185, Train F1 (macro): 0.5468
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 6299 1701    0]
 [   0 1130 6797    0]
 [   0   26   47    0]]
Val Loss: 0.6682, Val Accuracy: 0.7388
Val F1 (micro): 0.7388, Val F1 (macro): 0.3139
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   21    4    0]
 [   0  402 1161    0]
 [   0    5    7    0]]
Epoch [6000/100000]
Train Loss: 0.4071, Train Accuracy: 0.8140
Train F1 (micro): 0.8140, Train F1 (macro): 0.5428
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 6378 1622    0]
 [   0 1345 6646    0]
 [   0    1    8    0]]
Val Loss: 0.7480, Val Accuracy: 0.6369
Val F1 (micro): 0.6369, Val F1 (macro): 0.2824
Val Confusion Matrix:
[[  0   0   0   0]
 [  0  22   3   0]
 [  0 566 997   0]
 [  0   6   6   0]]
Epoch [7000/100000]
Train Loss: 0.4157, Train Accuracy: 0.8144
Train F1 (micro): 0.8144, Train F1 (macro): 0.5436
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 6442 1558    0]
 [   0 1375 6589    4]
 [   0    5   27    0]]
Val Loss: 0.4735, Val Accuracy: 0.8294
Val F1 (micro): 0.8294, Val F1 (macro): 0.3382
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   16    9    0]
 [   0  252 1311    0]
 [   0    4    8    0]]
Epoch [8000/100000]
Train Loss: 0.3881, Train Accuracy: 0.8213
Train F1 (micro): 0.8213, Train F1 (macro): 0.5457
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 5524 1618    0]
 [   0 1230 7617    0]
 [   0    3    8    0]]
Val Loss: 0.5255, Val Accuracy: 0.7588
Val F1 (micro): 0.7588, Val F1 (macro): 0.3165
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   18    7    0]
 [   0  367 1196    0]
 [   0    5    7    0]]
Epoch [9000/100000]
Train Loss: 0.4452, Train Accuracy: 0.8066
Train F1 (micro): 0.8066, Train F1 (macro): 0.6205
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 5329 1638   33]
 [   0 1139 7527   92]
 [   0   50  142   50]]
Val Loss: 0.6621, Val Accuracy: 0.7156
Val F1 (micro): 0.7156, Val F1 (macro): 0.3063
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   21    4    0]
 [   0  439 1124    0]
 [   0    5    7    0]]
Epoch [10000/100000]
Train Loss: 0.3717, Train Accuracy: 0.8433
Train F1 (micro): 0.8433, Train F1 (macro): 0.5610
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 5544 1456    0]
 [   0  988 7949    0]
 [   0    7   56    0]]
Val Loss: 0.5433, Val Accuracy: 0.7619
Val F1 (micro): 0.7619, Val F1 (macro): 0.3204
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   20    5    0]
 [   0  364 1199    0]
 [   0    5    7    0]]
Epoch [11000/100000]
Train Loss: 0.4054, Train Accuracy: 0.8195
Train F1 (micro): 0.8195, Train F1 (macro): 0.5841
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 5290 1704    6]
 [   0 1094 7816   14]
 [   0   21   49    6]]
Val Loss: 0.3899, Val Accuracy: 0.8550
Val F1 (micro): 0.8550, Val F1 (macro): 0.3491
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   16    9    0]
 [   0  211 1352    0]
 [   0    3    9    0]]
Epoch [12000/100000]
Train Loss: 0.6197, Train Accuracy: 0.6613
Train F1 (micro): 0.6613, Train F1 (macro): 0.4213
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 3029 3971    0]
 [   0 1442 7551    0]
 [   0    0    7    0]]
Val Loss: 0.5118, Val Accuracy: 0.9762
Val F1 (micro): 0.9762, Val F1 (macro): 0.3293
Val Confusion Matrix:
[[   0    0    0    0]
 [   0    0   25    0]
 [   0    1 1562    0]
 [   0    0   12    0]]
Epoch [13000/100000]
Train Loss: 0.5739, Train Accuracy: 0.7114
Train F1 (micro): 0.7114, Train F1 (macro): 0.4650
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 3962 3038    0]
 [   0 1568 7421    0]
 [   0    2    9    0]]
Val Loss: 0.5634, Val Accuracy: 0.7863
Val F1 (micro): 0.7863, Val F1 (macro): 0.3209
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   15   10    0]
 [   0  320 1243    0]
 [   0    5    7    0]]
Epoch [14000/100000]
Train Loss: 0.4995, Train Accuracy: 0.7711
Train F1 (micro): 0.7711, Train F1 (macro): 0.5089
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 4609 2391    0]
 [   0 1225 7729    7]
 [   0    6   33    0]]
Val Loss: 0.6428, Val Accuracy: 0.7600
Val F1 (micro): 0.7600, Val F1 (macro): 0.3169
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   18    7    0]
 [   0  365 1198    0]
 [   0    6    6    0]]
Epoch [15000/100000]
Train Loss: 0.5756, Train Accuracy: 0.7282
Train F1 (micro): 0.7282, Train F1 (macro): 0.4994
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 4033 2140  111]
 [   0 1559 7605  292]
 [   0   98  149   13]]
Val Loss: 0.4167, Val Accuracy: 0.8788
Val F1 (micro): 0.8788, Val F1 (macro): 0.3474
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   11   14    0]
 [   0  168 1395    0]
 [   0    3    9    0]]
Epoch [16000/100000]
Train Loss: 0.4419, Train Accuracy: 0.8162
Train F1 (micro): 0.8162, Train F1 (macro): 0.5314
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 3948 2052    0]
 [   0  820 9111    0]
 [   0    1   68    0]]
Val Loss: 0.3129, Val Accuracy: 0.9213
Val F1 (micro): 0.9213, Val F1 (macro): 0.3641
Val Confusion Matrix:
[[   0    0    0    0]
 [   0    9   16    0]
 [   0   98 1465    0]
 [   0    4    8    0]]
Epoch [17000/100000]
Train Loss: 0.4157, Train Accuracy: 0.8217
Train F1 (micro): 0.8217, Train F1 (macro): 0.5354
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 4053 1947    0]
 [   0  867 9094    0]
 [   0   19   20    0]]
Val Loss: 0.2660, Val Accuracy: 0.9250
Val F1 (micro): 0.9250, Val F1 (macro): 0.3628
Val Confusion Matrix:
[[   0    0    0    0]
 [   0    8   17    0]
 [   0   91 1472    0]
 [   0    2   10    0]]
Epoch [18000/100000]
Train Loss: 0.4054, Train Accuracy: 0.8250
Train F1 (micro): 0.8250, Train F1 (macro): 0.5390
Train Confusion Matrix:
[[   0    0    0    0]
 [   0 4135 1865    0]
 [   0  882 9065    0]
 [   0    0   53    0]]
Val Loss: 0.3667, Val Accuracy: 0.8831
Val F1 (micro): 0.8831, Val F1 (macro): 0.3553
Val Confusion Matrix:
[[   0    0    0    0]
 [   0   13   12    0]
 [   0  163 1400    0]
 [   0    3    9    0]]
