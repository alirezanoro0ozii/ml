Some weights of EsmModel were not initialized from the model checkpoint at facebook/esm1b_t33_650M_UR50S and are newly initialized: ['esm.pooler.dense.bias', 'esm.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
model: 653.014425 M parameters
ESM1b(
  (esm): EsmModel(
    (embeddings): EsmEmbeddings(
      (word_embeddings): Embedding(33, 1280, padding_idx=1)
      (layer_norm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
      (dropout): Dropout(p=0.0, inplace=False)
      (position_embeddings): Embedding(1026, 1280, padding_idx=1)
    )
    (encoder): EsmEncoder(
      (layer): ModuleList(
        (0-32): 33 x EsmLayer(
          (attention): EsmAttention(
            (self): EsmSelfAttention(
              (query): Linear(in_features=1280, out_features=1280, bias=True)
              (key): Linear(in_features=1280, out_features=1280, bias=True)
              (value): Linear(in_features=1280, out_features=1280, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (output): EsmSelfOutput(
              (dense): Linear(in_features=1280, out_features=1280, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (LayerNorm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
          )
          (intermediate): EsmIntermediate(
            (dense): Linear(in_features=1280, out_features=5120, bias=True)
          )
          (output): EsmOutput(
            (dense): Linear(in_features=5120, out_features=1280, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (LayerNorm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
        )
      )
      (emb_layer_norm_after): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
    )
    (pooler): EsmPooler(
      (dense): Linear(in_features=1280, out_features=1280, bias=True)
      (activation): Tanh()
    )
    (contact_head): EsmContactPredictionHead(
      (regression): Linear(in_features=660, out_features=1, bias=True)
      (activation): Sigmoid()
    )
  )
  (layer1): Linear(in_features=1280, out_features=512, bias=True)
  (relu): ReLU()
  (layer2): Linear(in_features=512, out_features=4, bias=True)
)
 35%|███▍      | 3499/10000 [1:33:21<2:44:01,  1.51s/it] 
Epoch [500/10000], Train Loss: 0.0011
[[  17    8    0]
 [ 421 1142    0]
 [   7    5    0]]
val Loss: 0.7202, val Accuracy: 0.7244, val F1 Score (micro): 0.7244, , val F1 Score (macro): 0.3042
Epoch [1000/10000], Train Loss: 0.0004
[[  19    8    0]
 [ 310 1242    0]
 [   7   14    0]]
val Loss: 0.5671, val Accuracy: 0.7881, val F1 Score (micro): 0.7881, , val F1 Score (macro): 0.3289
Epoch [1500/10000], Train Loss: 0.0003
[[ 23   5   0]
 [683 875   0]
 [  8   6   0]]
val Loss: 0.9330, val Accuracy: 0.5613, val F1 Score (micro): 0.5613, , val F1 Score (macro): 0.2593
Epoch [2000/10000], Train Loss: 0.0003
[[   7    5    0]
 [ 102 1461    0]
 [   3   22    0]]
val Loss: 0.4411, val Accuracy: 0.9175, val F1 Score (micro): 0.9175, , val F1 Score (macro): 0.3569
Epoch [2500/10000], Train Loss: 0.0003
[[   4   15    0]
 [  93 1473    0]
 [   0   15    0]]
val Loss: 0.6738, val Accuracy: 0.9231, val F1 Score (micro): 0.9231, , val F1 Score (macro): 0.3430
Epoch [3000/10000], Train Loss: 0.0002
[[   0   20    0]
 [  87 1477    0]
 [   2   14    0]]
val Loss: 0.8101, val Accuracy: 0.9231, val F1 Score (micro): 0.9231, , val F1 Score (macro): 0.3202
Epoch [3500/10000], Train Loss: 0.0002
[[   5   25    0]
 [ 338 1211    0]
 [   2   19    0]]
val Loss: 0.8287, val Accuracy: 0.7600, val F1 Score (micro): 0.7600, , val F1 Score (macro): 0.2968
Epoch [4000/10000], Train Loss: 0.0002
[[  11   13    0]
 [ 261 1297    0]
 [   6   12    0]]
val Loss: 0.5194, val Accuracy: 0.8175, val F1 Score (micro): 0.8175, , val F1 Score (macro): 0.3245
Epoch [4500/10000], Train Loss: 0.0001
[[ 13   8   0]
 [621 938   0]
 [  8  12   0]]
val Loss: 1.4658, val Accuracy: 0.5944, val F1 Score (micro): 0.5944, , val F1 Score (macro): 0.2615
Epoch [5000/10000], Train Loss: 0.0001
[[   7   14    0]
 [  99 1471    0]
 [   2    7    0]]
val Loss: 0.5422, val Accuracy: 0.9237, val F1 Score (micro): 0.9237, , val F1 Score (macro): 0.3564
Epoch [5500/10000], Train Loss: 0.0001
[[   8   14    0]
 [ 256 1307    0]
 [   4   11    0]]
val Loss: 0.6250, val Accuracy: 0.8219, val F1 Score (micro): 0.8219, , val F1 Score (macro): 0.3194
Epoch [6000/10000], Train Loss: 0.0001
[[  13   12    0]
 [ 305 1257    0]
 [   3   10    0]]
val Loss: 0.5622, val Accuracy: 0.7937, val F1 Score (micro): 0.7937, , val F1 Score (macro): 0.3200
Epoch [6500/10000], Train Loss: 0.0001
[[  12   13    0]
 [ 388 1163    0]
 [   8   16    0]]
val Loss: 0.7004, val Accuracy: 0.7344, val F1 Score (micro): 0.7344, , val F1 Score (macro): 0.3011
Epoch [7000/10000], Train Loss: 0.0000
[[  12    8    0]
 [ 328 1230    0]
 [   5   17    0]]
val Loss: 0.7810, val Accuracy: 0.7762, val F1 Score (micro): 0.7762, , val F1 Score (macro): 0.3134
Epoch [7500/10000], Train Loss: 0.0001
[[  17    9    0]
 [ 389 1157    0]
 [   6   22    0]]
val Loss: 0.7489, val Accuracy: 0.7338, val F1 Score (micro): 0.7338, , val F1 Score (macro): 0.3080
Epoch [8000/10000], Train Loss: 0.0001
[[   9   12    0]
 [  77 1486    0]
 [   2   14    0]]
val Loss: 0.3985, val Accuracy: 0.9344, val F1 Score (micro): 0.9344, , val F1 Score (macro): 0.3772
Epoch [8500/10000], Train Loss: 0.0001
[[  24    9    0]
 [ 495 1060    0]
 [  10    2    0]]
val Loss: 0.6836, val Accuracy: 0.6775, val F1 Score (micro): 0.6775, , val F1 Score (macro): 0.2976
Epoch [9000/10000], Train Loss: 0.0001
[[   8    9    0]
 [ 241 1328    0]
 [   5    9    0]]
val Loss: 0.4579, val Accuracy: 0.8350, val F1 Score (micro): 0.8350, , val F1 Score (macro): 0.3234
Epoch [9500/10000], Train Loss: 0.0001
[[ 12   6   0]
 [621 942   0]
 [  5  14   0]]
val Loss: 0.7610, val Accuracy: 0.5962, val F1 Score (micro): 0.5962, , val F1 Score (macro): 0.2609
Epoch [10000/10000], Train Loss: 0.0001
[[  10   12    0]
 [ 252 1313    0]
 [   5    8    0]]
val Loss: 0.5759, val Accuracy: 0.8269, val F1 Score (micro): 0.8269, , val F1 Score (macro): 0.3251
