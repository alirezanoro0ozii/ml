{0: 4, 1: 35, 2: 1368, 3: 6024, 4: 4330, 5: 5265, 6: 5453, 7: 15592, 8: 65895, 9: 59786, 10: 54221, 11: 141660, 12: 20431, 13: 13635, 14: 17392, 15: 32172, 16: 35581, 17: 34356, 18: 33115, 19: 43504, 20: 61510, 21: 57903, 22: 31214, 23: 32835, 24: 107520, 25: 82492, 26: 96471, 27: 90666, 28: 85207, 29: 70508, 30: 71902, 31: 26728, 32: 11716, 33: 6444, 34: 2510, 35: 872, 36: 4}

Taxonomic ranks sorted by number of taxa:
11: 141660
24: 107520
26: 96471
27: 90666
28: 85207
25: 82492
30: 71902
29: 70508
8: 65895
20: 61510
9: 59786
21: 57903
10: 54221
19: 43504
16: 35581
17: 34356
18: 33115
23: 32835
15: 32172
22: 31214
31: 26728
12: 20431
14: 17392
7: 15592
13: 13635
32: 11716
33: 6444
3: 6024
6: 5453
5: 5265
4: 4330
34: 2510
2: 1368
35: 872
1: 35
0: 4
36: 4
{1: 'Viruses', 2: 'cellular organisms', 3: 'other entries', 4: 'unclassified entries'}
Some weights of EsmModel were not initialized from the model checkpoint at facebook/esm1b_t33_650M_UR50S and are newly initialized: ['esm.pooler.dense.bias', 'esm.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of EsmModel were not initialized from the model checkpoint at facebook/esm1b_t33_650M_UR50S and are newly initialized: ['esm.pooler.dense.bias', 'esm.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Successfully loaded checkpoint from epoch 99999
Some weights of EsmModel were not initialized from the model checkpoint at facebook/esm1b_t33_650M_UR50S and are newly initialized: ['esm.pooler.dense.bias', 'esm.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of EsmModel were not initialized from the model checkpoint at facebook/esm1b_t33_650M_UR50S and are newly initialized: ['esm.pooler.dense.bias', 'esm.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Successfully loaded checkpoint from epoch 99999
Trainable parameters: 755.969937 M
Total parameters: 1408.326438 M
ESM2(
  (esm): EsmModel(
    (embeddings): EsmEmbeddings(
      (word_embeddings): Embedding(33, 1280, padding_idx=1)
      (layer_norm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
      (dropout): Dropout(p=0.0, inplace=False)
      (position_embeddings): Embedding(1026, 1280, padding_idx=1)
    )
    (encoder): EsmEncoder(
      (layer): ModuleList(
        (0-32): 33 x EsmLayer(
          (attention): EsmAttention(
            (self): EsmSelfAttention(
              (query): Linear(in_features=1280, out_features=1280, bias=True)
              (key): Linear(in_features=1280, out_features=1280, bias=True)
              (value): Linear(in_features=1280, out_features=1280, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (output): EsmSelfOutput(
              (dense): Linear(in_features=1280, out_features=1280, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (LayerNorm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
          )
          (intermediate): EsmIntermediate(
            (dense): Linear(in_features=1280, out_features=5120, bias=True)
          )
          (output): EsmOutput(
            (dense): Linear(in_features=5120, out_features=1280, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
          (LayerNorm): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
        )
      )
      (emb_layer_norm_after): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
    )
    (pooler): EsmPooler(
      (dense): Linear(in_features=1280, out_features=1280, bias=True)
      (activation): Tanh()
    )
    (contact_head): EsmContactPredictionHead(
      (regression): Linear(in_features=660, out_features=1, bias=True)
      (activation): Sigmoid()
    )
  )
  (heads): ModuleDict(
    (0): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=4, bias=True)
    )
    (1): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=35, bias=True)
    )
    (2): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=1368, bias=True)
    )
    (3): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=6024, bias=True)
    )
    (4): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=4330, bias=True)
    )
    (5): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=5265, bias=True)
    )
    (6): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=5453, bias=True)
    )
    (7): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=15592, bias=True)
    )
    (8): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=65895, bias=True)
    )
    (9): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=59786, bias=True)
    )
    (10): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=54221, bias=True)
    )
    (11): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=141660, bias=True)
    )
    (12): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=20431, bias=True)
    )
    (13): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=13635, bias=True)
    )
    (14): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=17392, bias=True)
    )
    (15): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=32172, bias=True)
    )
    (16): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=35581, bias=True)
    )
    (17): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=34356, bias=True)
    )
    (18): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=33115, bias=True)
    )
    (19): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=43504, bias=True)
    )
    (20): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=61510, bias=True)
    )
    (21): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=57903, bias=True)
    )
    (22): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=31214, bias=True)
    )
    (23): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=32835, bias=True)
    )
    (24): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=107520, bias=True)
    )
    (25): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=82492, bias=True)
    )
    (26): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=96471, bias=True)
    )
    (27): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=90666, bias=True)
    )
    (28): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=85207, bias=True)
    )
    (29): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=70508, bias=True)
    )
    (30): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=71902, bias=True)
    )
    (31): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=26728, bias=True)
    )
    (32): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=11716, bias=True)
    )
    (33): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=6444, bias=True)
    )
    (34): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=2510, bias=True)
    )
    (35): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=872, bias=True)
    )
    (36): Sequential(
      (0): Linear(in_features=1280, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=4, bias=True)
    )
  )
)
{0: 4, 1: 35}

Taxonomic ranks sorted by number of taxa:
1: 35
0: 4
{1: 'Viruses', 2: 'cellular organisms', 3: 'other entries', 4: 'unclassified entries'}
{1: 'Finnlakeviridae', 2: 'Duplodnaviria', 3: 'Halspiviridae', 4: 'Ovaliviridae', 5: 'Bicaudaviridae', 6: 'Guttaviridae', 7: 'environmental samples', 8: 'Spiraviridae', 9: 'Bacteria', 10: 'Naldaviricetes', 11: 'Adnaviria', 12: 'Dinodnavirus', 13: 'Clavaviridae', 14: 'Ampullaviridae', 15: 'Tolecusatellitidae', 16: 'Anelloviridae', 17: 'unclassified bacterial viruses', 18: 'Riboviria', 19: 'Fuselloviridae', 20: 'Globuloviridae', 21: 'Eukaryota', 22: 'Varidnaviria', 23: 'Archaea', 24: 'unclassified archaeal viruses', 25: 'Monodnaviria (single-stranded DNA viruses)', 26: 'unclassified sequences', 27: 'Ribozyviria', 28: 'Polydnaviridae', 29: 'Alphasatellitidae', 30: 'unclassified viruses', 31: 'Satellites', 32: 'Portogloboviridae', 33: 'other sequences', 34: 'Plasmaviridae', 35: 'unclassified virophages'}
cuda:0
../checkpoints/Freeze ESM Multiple head_checkpoints
